From fb0fbbc9909718e4791f6071130f97611d74b23b Mon Sep 17 00:00:00 2001
From: nikesh <Nikesh.Oswal@wolfsonmicro.com>
Date: Fri, 8 Nov 2013 15:45:05 +0000
Subject: [PATCH 04/14] ASOC: WM8804: Add alsa control for SPDIF-RX

SPDIF RX was enabled or disabled based on the
source for SPDIF TX. When source for SPDIF TX is
AIF then SPDIF RX was disabled and when the source
is SPDIF RX then it is enabled. This logic was not
correct as SPDIF RX can also be enabled when we just
want SPDIF RX -> AIF path without any SPDIF TX in
picture

Signed-off-by: nikesh <Nikesh.Oswal@wolfsonmicro.com>
---
 sound/soc/codecs/wm8804.c |   14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/sound/soc/codecs/wm8804.c b/sound/soc/codecs/wm8804.c
index 1704b1e..08aab21 100644
--- a/sound/soc/codecs/wm8804.c
+++ b/sound/soc/codecs/wm8804.c
@@ -97,7 +97,8 @@ static const SOC_ENUM_SINGLE_EXT_DECL(txsrc, txsrc_text);
 static const struct snd_kcontrol_new wm8804_snd_controls[] = {
 	SOC_ENUM_EXT("Input Source", txsrc, txsrc_get, txsrc_put),
 	SOC_SINGLE("TX Playback Switch", WM8804_PWRDN, 2, 1, 1),
-	SOC_SINGLE("AIF Playback Switch", WM8804_PWRDN, 4, 1, 1)
+	SOC_SINGLE("AIF Playback Switch", WM8804_PWRDN, 4, 1, 1),
+	SOC_SINGLE("RX Playback Switch", WM8804_PWRDN, 1, 1, 1),
 };
 
 static int txsrc_get(struct snd_kcontrol *kcontrol,
@@ -120,7 +121,7 @@ static int txsrc_put(struct snd_kcontrol *kcontrol,
 		     struct snd_ctl_elem_value *ucontrol)
 {
 	struct snd_soc_codec *codec;
-	unsigned int src, txpwr;
+	unsigned int src, txpwr, rxpwr;
 
 	codec = snd_kcontrol_chip(kcontrol);
 
@@ -142,15 +143,18 @@ static int txsrc_put(struct snd_kcontrol *kcontrol,
 
 	/* save the current power state of the transmitter */
 	txpwr = snd_soc_read(codec, WM8804_PWRDN) & 0x4;
+	/* save the current power state of the receiver */
+	rxpwr = snd_soc_read(codec, WM8804_PWRDN) & 0x2;
 	/* power down the transmitter */
 	snd_soc_update_bits(codec, WM8804_PWRDN, 0x4, 0x4);
+	/* power down the receiver */
+	snd_soc_update_bits(codec, WM8804_PWRDN, 0x2, 0x2);
+
 	/* set the tx source */
 	snd_soc_update_bits(codec, WM8804_SPDTX4, 0x40,
 			    ucontrol->value.integer.value[0] << 6);
 
 	if (ucontrol->value.integer.value[0]) {
-		/* power down the receiver */
-		snd_soc_update_bits(codec, WM8804_PWRDN, 0x2, 0x2);
 		/* power up the AIF */
 		snd_soc_update_bits(codec, WM8804_PWRDN, 0x10, 0);
 	} else {
@@ -161,6 +165,8 @@ static int txsrc_put(struct snd_kcontrol *kcontrol,
 
 	/* restore the transmitter's configuration */
 	snd_soc_update_bits(codec, WM8804_PWRDN, 0x4, txpwr);
+	/* restore the receiver's configuration */
+	snd_soc_update_bits(codec, WM8804_PWRDN, 0x2, rxpwr);
 
 	return 0;
 }
-- 
1.7.9.5

